{"version":3,"sources":["utils/prop-types.js","components/deal.jsx","components/rest-deals.jsx","components/daily-deals.jsx","App.js","index.js"],"names":["shape","id","number","isRequired","restaurantId","day","arrayOf","string","category","description","price","timeStart","timeEnd","name","phone","url","Deal","deal","Wrapper","Description","Price","styled","div","h4","RestDeals","deals","dealDivs","useMemo","map","restaurant","restaurants","find","rest","RestWrapper","RestTitle","PhoneNumber","theme","fontColor","h3","DailyDeals","dealsByRestDivs","restDeals","undefined","push","restDealDivs","restId","dayName","today","Date","getDay","days","indexOf","DayTitle","h2","App","useState","setCategory","dailyDealDivs","sortedDays","slice","concat","dailyDeals","filter","includes","console","log","type","value","checked","onChange","e","target","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1655770.chunk.js","sourcesContent":["import { shape, number, string, arrayOf } from 'prop-types';\n\n/**\n * Price, timeStart and timeEnd\n * are allowed to be missing\n */\nexport const dealProp = shape({\n   id: number.isRequired,\n   restaurantId: number.isRequired,\n   day: arrayOf(string).isRequired,\n   category: string.isRequired,\n   description: string.isRequired,\n   price: string,\n   timeStart: string,\n   timeEnd: string\n});\n\n/**\n * Phone number and url will be optional,\n * since some places might not have those\n */\nexport const restaurantProp = shape({\n   id: number.isRequired,\n   name: string.isRequired,\n   phone: string,\n   url: string\n});","import React from 'react';\nimport { dealProp } from '../utils/prop-types';\nimport styled from 'styled-components';\n\n////////////////////////////////////////////////////\n//////////////////// COMPONENT /////////////////////\n////////////////////////////////////////////////////\n\nexport default function Deal({ deal }) {\n\n\n   return (\n      <Wrapper>\n         <Description>{deal.description}</Description>\n         <Price>{deal.price}</Price>\n      </Wrapper>\n   );\n}\n////////////////////////////////////////////////////\n/////////////// COMPONENT PROP TYPES ///////////////\n////////////////////////////////////////////////////\nDeal.propTypes = {\n   deal: dealProp\n};\n////////////////////////////////////////////////////\n//////////////// STYLED COMPONENTS /////////////////\n////////////////////////////////////////////////////\nconst Wrapper = styled.div`\n   width: 90%;\n   margin: 10px 0;\n\n   font-family: 'Marcellus', serif;\n\n   display: flex;\n   flex-flow: row nowrap;\n   justify-content: space-between;\n`;\n\nconst Description = styled.h4`\n   font-size: min(18px, 4vw);\n\n`;\n\nconst Price = styled.h4`\n   font-size: min(18px, 4vw);\n`;","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport restaurants from '../config/restaurants.json';\nimport Deal from './deal';\nimport { dealProp } from '../utils/prop-types';\n\n\n////////////////////////////////////////////////////\n//////////////////// COMPONENT /////////////////////\n////////////////////////////////////////////////////\n\nexport default function RestDeals({ deals }) {\n\n   const dealDivs = useMemo(() => {\n      return deals.map((deal) => <Deal deal={deal} key={deal.id}/>);\n   }, [deals]);\n\n   const restaurant = useMemo(() => \n      restaurants.find((rest) => rest.id === deals[0]?.restaurantId));\n\n   return (\n      <Wrapper>\n         <RestWrapper>\n            <RestTitle>{restaurant.name}</RestTitle>\n            <PhoneNumber>{restaurant.phone}</PhoneNumber>\n         </RestWrapper>\n         {dealDivs}\n      </Wrapper>\n   );\n}\n////////////////////////////////////////////////////\n/////////////// COMPONENT PROP TYPES ///////////////\n////////////////////////////////////////////////////\n\nRestDeals.propTypes = {\n   deals: PropTypes.arrayOf(dealProp)\n};\n\n////////////////////////////////////////////////////\n//////////////// STYLED COMPONENTS /////////////////\n////////////////////////////////////////////////////\nconst Wrapper = styled.div`\n   width: min(550px, 90%);\n   margin-top: 40px;\n\n   display: flex;\n   flex-flow: column nowrap;\n   align-items: center;\n\n`;\nconst RestWrapper = styled.div`\n   width: 100%;\n   font-family: 'Marcellus SC', serif;\n   margin-bottom: 20px;\n   border-bottom: solid 1px ${({theme}) => theme.fontColor};\n   padding-bottom: 5px;\n\n   display: flex;\n   flex-flow: row wrap;\n   align-items: center;\n   justify-content: space-between;\n\n\n`;\n\n\nconst RestTitle = styled.h3`\n   font-size: min(30px, 5vw);\n`;\n\nconst PhoneNumber = styled.h4`\n   font-size: min(15px, 3.5vw);\n`;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport RestDeals from './rest-deals';\nimport { dealProp } from '../utils/prop-types';\nimport days from '../config/days.json';\n\n\n////////////////////////////////////////////////////\n//////////////////// COMPONENT /////////////////////\n////////////////////////////////////////////////////\n\n/**\n * This component will hold all of the deals that\n * correspond to @day \n * @param { string } day The day of the week\n * @param {deals } dealProp[] An array of deals for \n * that day\n */\nexport default function DailyDeals({ day, deals }) {\n\n   /**\n    * @dealsByRestDivs stores an array of RestDeal\n    * divs, each mapping to a restaurant that has\n    * a deal for the day corresponding to @day\n    */\n   const dealsByRestDivs = useMemo(() => {\n      const restDeals = {};\n      for (const deal of deals) {\n         if (restDeals[deal.restaurantId] == undefined) {\n            restDeals[deal.restaurantId] = [deal];\n         } else {\n            restDeals[deal.restaurantId].push(deal);\n         }\n      }\n      const restDealDivs = [];\n      for (const restId in restDeals) {\n         restDealDivs.push(<RestDeals key={restId} deals={restDeals[restId]}/>);\n      }\n      return restDealDivs;\n   }, [deals]);\n\n   const dayName = useMemo(() => {\n      const today = new Date().getDay();\n      if (days.indexOf(day) === today)\n         return 'today';\n      else if (days.indexOf(day) - 1 === today) \n         return 'tomorrow';\n      else \n         return day;\n   }, [day]);\n\n   return (\n      <Wrapper>\n         <DayTitle>{dayName + '\\'s Deals'}</DayTitle>\n         { dealsByRestDivs }\n      </Wrapper>\n   );\n}\n////////////////////////////////////////////////////\n/////////////// COMPONENT PROP TYPES ///////////////\n////////////////////////////////////////////////////\n\nDailyDeals.propTypes = {\n   day: PropTypes.string,\n   deals: PropTypes.arrayOf(dealProp)\n};\n////////////////////////////////////////////////////\n//////////////// STYLED COMPONENTS /////////////////\n////////////////////////////////////////////////////\n\nconst Wrapper = styled.div`\n   width: 100%;\n   margin: 300px 0;\n\n   display: flex;\n   flex-flow: column nowrap;\n   align-items: center;\n`;\n\nconst DayTitle = styled.h2`\n   margin-bottom: 30px;\n   font-size: min(120px, 15vw);\n   font-family: 'Baskervville', serif;\n   text-transform: capitalize;\n   text-align: center;\n`;","import React, { useMemo, useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport deals from './config/deals.json';\nimport days from './config/days.json';\nimport theme from './config/themes.json';\nimport DailyDeals from './components/daily-deals';\n\n////////////////////////////////////////////////////\n//////////////////// COMPONENT /////////////////////\n////////////////////////////////////////////////////\n\nexport default function App() {\n\n   const [category, setCategory] = useState('food');\n\n   /**\n    * @dailyDealDivs is an array of DailyDiv components that each\n    * have the appropriate deals for each day\n    */\n   let dailyDealDivs = useMemo(() => {\n      const today = new Date().getDay();\n      const sortedDays = days.slice(today).concat(days.slice(0, today));\n\n      const dailyDeals = {};\n      for (const day of sortedDays) {\n         dailyDeals[day] = deals.filter((deal) => (deal.day.includes(day) && deal.category === category));\n      }\n      console.log(dailyDeals['monday']);\n      return sortedDays.map((day) => <DailyDeals day={day} deals={dailyDeals[day]} key={day}/>);\n   }, [category]);\n\n\n   return (\n      <ThemeProvider theme={theme[category]}>\n         <Wrapper>\n            { dailyDealDivs }\n            <input type=\"radio\" value=\"food\" name=\"category\" checked={category === 'food'} onChange={(e) => setCategory(e.target.value)} />\n            <input type=\"radio\" value=\"drink\" name=\"category\" checked={category === 'drink'} onChange={(e) => setCategory(e.target.value)}/>  \n         </Wrapper>\n      </ThemeProvider>\n   );\n}\n////////////////////////////////////////////////////\n//////////////// STYLED COMPONENTS /////////////////\n////////////////////////////////////////////////////\n\nconst Wrapper = styled.div`\n   width: 100%;\n   height: max(auto, 100vh);\n   background-color: ${({theme}) => theme.backgroundColor};\n   transition: all .5s ease-in-out;\n   color: ${({theme}) => theme.fontColor};\n\n   display: flex;\n   flex-flow: column;\n   justify-content: center;\n   align-items: center;\n\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/reset.css';\nimport './styles/index.css';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App /> \n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}