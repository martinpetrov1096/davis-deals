{"version":3,"sources":["utils/prop-types.js","components/deal.jsx","components/rest-deals.jsx","components/daily-deals.jsx","App.js","index.js"],"names":["shape","id","number","isRequired","restaurantId","day","arrayOf","string","category","description","price","timeStart","timeEnd","name","phone","url","Deal","deal","RestDeals","deals","dealDivs","useMemo","map","restaurants","find","rest","DailyDeals","dealsByRestDivs","restDeals","undefined","push","restDealDivs","restId","App","dailyDealDivs","dailyDeals","days","toString","filter","includes","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAMwBA,gBAAM,CAC3BC,GAAIC,SAAOC,WACXC,aAAcF,SAAOC,WACrBE,IAAKC,kBAAQC,UAAQJ,WACrBK,SAAUD,SAAOJ,WACjBM,YAAaF,SAAOJ,WACpBO,MAAOH,SACPI,UAAWJ,SACXK,QAASL,WAOkBP,gBAAM,CACjCC,GAAIC,SAAOC,WACXU,KAAMN,SAAOJ,WACbW,MAAOP,SACPQ,IAAKR,W,MCjBO,SAASS,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAG5B,OACG,8BACG,6BAAKA,EAAKR,gBCFJ,SAASS,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAE3BC,EAAWC,mBAAQ,WACtB,OAAOF,EAAMG,KAAI,SAACL,GAAD,OAAU,cAACD,EAAD,CAAMC,KAAMA,GAAWA,EAAKhB,SACvD,IAGH,OACG,gCACG,6BAAKsB,EAAYC,MAAK,SAACC,GAAD,aAAUA,EAAKxB,MAAL,UAAYkB,EAAM,UAAlB,aAAY,EAAUf,iBAAcS,OACnEO,KCJK,SAASM,EAAT,GAAqC,IAAfrB,EAAc,EAAdA,IAAKc,EAAS,EAATA,MAOjCQ,EAAkBN,mBAAQ,WAC7B,IADmC,EAC7BO,EAAY,GADiB,cAEhBT,GAFgB,IAEnC,2BAA0B,CAAC,IAAhBF,EAAe,aACaY,GAAhCD,EAAUX,EAAKb,cAChBwB,EAAUX,EAAKb,cAAgB,CAACa,GAEhCW,EAAUX,EAAKb,cAAc0B,KAAKb,IANL,8BASnC,IAAMc,EAAe,GACrB,IAAK,IAAMC,KAAUJ,EAClBG,EAAaD,KAAK,cAACZ,EAAD,CAAwBC,MAAOS,EAAUI,IAAzBA,IAErC,OAAOD,IACP,IAGH,OACG,gCACG,6BAAK1B,IACHsB,KCtCI,SAASM,IAErB,IAAMC,EAAgBb,mBAAQ,WAC3B,IADiC,EAC3Bc,EAAa,GADc,cAEfC,GAFe,yBAEtB/B,EAFsB,QAG9B8B,EAAW9B,EAAIgC,YAAclB,EAAMmB,QAAO,SAACrB,GAAD,OAAUA,EAAKZ,IAAIkC,SAASlC,OADzE,2BAAyB,IAFQ,8BAKjC,OAAO+B,EAAKd,KAAI,SAACjB,GACd,OACG,cAACqB,EAAD,CAAYrB,IAAKA,EAAKc,MAAOgB,EAAW9B,IAAWA,QAGzD,IAEH,OACG,qBAAKmC,UAAU,MAAf,SACKN,IClBXO,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAACV,EAAD,MAEHW,SAASC,eAAe,U","file":"static/js/main.5bd1d254.chunk.js","sourcesContent":["import { shape, number, string, arrayOf } from 'prop-types';\n\n/**\n * Price, timeStart and timeEnd\n * are allowed to be missing\n */\nexport const dealProp = shape({\n   id: number.isRequired,\n   restaurantId: number.isRequired,\n   day: arrayOf(string).isRequired,\n   category: string.isRequired,\n   description: string.isRequired,\n   price: string,\n   timeStart: string,\n   timeEnd: string\n});\n\n/**\n * Phone number and url will be optional,\n * since some places might not have those\n */\nexport const RestaurantProp = shape({\n   id: number.isRequired,\n   name: string.isRequired,\n   phone: string,\n   url: string\n});","import React from 'react';\nimport { dealProp } from '../utils/prop-types';\n\n\n////////////////////////////////////////////////////\n//////////////////// COMPONENT /////////////////////\n////////////////////////////////////////////////////\n\nexport default function Deal({ deal }) {\n\n\n   return (\n      <div>\n         <h4>{deal.description}</h4>\n      </div>\n   );\n}\n////////////////////////////////////////////////////\n/////////////// COMPONENT PROP TYPES ///////////////\n////////////////////////////////////////////////////\nDeal.propTypes = {\n   deal: dealProp\n};","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport restaurants from '../config/restaurants.json';\nimport Deal from './deal';\nimport { dealProp } from '../utils/prop-types';\n\n\n////////////////////////////////////////////////////\n//////////////////// COMPONENT /////////////////////\n////////////////////////////////////////////////////\n\nexport default function RestDeals({ deals }) {\n\n   const dealDivs = useMemo(() => {\n      return deals.map((deal) => <Deal deal={deal} key={deal.id}/>);\n   }, []);\n\n\n   return (\n      <div>\n         <h3>{restaurants.find((rest) => rest.id === deals[0]?.restaurantId).name}</h3>\n         {dealDivs}\n      </div>\n   );\n}\n////////////////////////////////////////////////////\n/////////////// COMPONENT PROP TYPES ///////////////\n////////////////////////////////////////////////////\n\nRestDeals.propTypes = {\n   deals: PropTypes.arrayOf(dealProp)\n};\n\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport RestDeals from './rest-deals';\nimport { dealProp } from '../utils/prop-types';\n\n\n////////////////////////////////////////////////////\n//////////////////// COMPONENT /////////////////////\n////////////////////////////////////////////////////\n\n/**\n * This component will hold all of the deals that\n * correspond to @day \n * @param { string } day The day of the week\n * @param {deals } dealProp[] An array of deals for \n * that day\n */\nexport default function DailyDeals({ day, deals }) {\n\n   /**\n    * @dealsByRestDivs stores an array of RestDeal\n    * divs, each mapping to a restaurant that has\n    * a deal for the day corresponding to @day\n    */\n   const dealsByRestDivs = useMemo(() => {\n      const restDeals = {};\n      for (const deal of deals) {\n         if (restDeals[deal.restaurantId] == undefined) {\n            restDeals[deal.restaurantId] = [deal];\n         } else {\n            restDeals[deal.restaurantId].push(deal);\n         }\n      }\n      const restDealDivs = [];\n      for (const restId in restDeals) {\n         restDealDivs.push(<RestDeals key={restId} deals={restDeals[restId]}/>);\n      }\n      return restDealDivs;\n   }, []);\n\n\n   return (\n      <div>\n         <h2>{day}</h2>\n         { dealsByRestDivs }\n      </div>\n   );\n}\n////////////////////////////////////////////////////\n/////////////// COMPONENT PROP TYPES ///////////////\n////////////////////////////////////////////////////\n\nDailyDeals.propTypes = {\n   day: PropTypes.string,\n   deals: PropTypes.arrayOf(dealProp)\n};","import React, { useMemo } from 'react';\nimport deals from './config/deals.json';\nimport days from './config/days.json';\nimport DailyDeals from './components/daily-deals';\n\n\nexport default function App() {\n\n   const dailyDealDivs = useMemo(() => {\n      const dailyDeals = {};\n      for (const day of days) {\n         dailyDeals[day.toString()] = deals.filter((deal) => deal.day.includes(day));\n      }\n      return days.map((day) => {\n         return (\n            <DailyDeals day={day} deals={dailyDeals[day]} key={day}/>\n         );\n      });\n   }, []);\n\n   return (\n      <div className=\"App\">\n         { dailyDealDivs }\n      </div>\n   );\n}\n\n/**\n * \n * monday: [\n *  nums.map((num) => return num * num);\n * \n  * ],\n  * \"tuesday\" : \n * \n */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App /> \n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}